# -*- coding: utf-8 -*-
"""equiv_relation_check_강나영.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F2XoxHeIunzMua4neC0wTTdym4LYspLh

# 관계 R 이 set 으로 주어질 때, 이 관계 R 이 동치 관계인지를 판단하는 파이썬 모듈을 만들라. 이 모듈에는 check_transitive(R), check_symmetric(R), check_reflexive(R) 을 포함하며, 이 함수들은 True, False 를 반환한다. 이 결과를 종합하여, 동치관계인지 판단하는 check_equivalance(R) 도 들어있는데, 이 함수에서 위의 세 함수 (즉, check_transitive(R), check_symmetric(R), check_reflexive(R)) 을 호출하여 해당 결과들을 종합하여 동치 관계 여부를 판단하고, True 혹은 False 를 최종적으로 반환해준다. 이 모듈이 팀원들의 깃페이지에 read.md 와 함께 기록되어 다운 받으면 설치 후 각 함수를 실행될 수 있도록 한다.

## 결과는 모든 집합 형태의 관계에 대해 작동해야하지만, 특히 아래의 예로 주어지는 집합에 대해 작동하도록 한다.

```
A = {1,2,3,4} # 관계가 정의된 집합
R = {(1, 1), (1, 3), (2, 2), (3, 3),(3, 1), (3, 4), (4, 4), (4, 3)} # 정의된 관계
```
"""

# (1)  여기에 전체 코드
def check_reflexive(R, A):
  '''
  반사적인가?
  '''
  for a in A:
    if (a, a) not in R:
      return False
    return True

def check_symmetric(R):
  '''
  대칭적인가?
  '''
  for (a, b) in R:
    if (b, a) not in R:
      return False
  return True

def check_transitive(R):
  '''
  추이적인가?
  '''
  for (a, b) in R:
    for (c, d) in R:
      if b == c and (a, d) not in R:
        return False
  return True

def check_equivalence(R, A):
  '''
  동치인가?
  '''
  return check_reflexive(R, A) and check_symmetric(R) and check_transitive(R)

def main():
    A = set()
    print("집합 A를 입력하세요. 각 원소를 한 줄에 하나 씩 입력하세요")
    print("입력이 끝나면 빈 줄을 입력하세요.")
    while True:
        line = input()
        if line.strip() == "":
            break
        A.add(int(line))

    print("관계 집합 R을 입력하세요. 각 원소는 'a b' 형태로 입력해야 합니다. *** 숫자만, 띄어쓰기로 구분")
    print("입력이 끝나면 빈 줄을 입력하세요.")
    R = set()
    while True:
        line = input()
        if line.strip() == "":
            break
        a, b = map(int, line.split())
        R.add((a, b))

    print("반사:", check_reflexive(R, A))
    print("대칭:", check_symmetric(R))
    print("추이:", check_transitive(R))
    print("동치관계:", check_equivalence(R, A))

    if check_equivalence(R, A):
        print("주어진 A와 R은 동치관계입니다")
    else:
        print("주어진 A와 R은 동치관계가 아닙니다")

if __name__ == "__main__":
    main()

# (2) 모듈이 설명과 함께 올라온 깃허브 링크 추가: